<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on ZA TAN</title><link>https://www.ganymedenil.com/tags/docker/</link><description>Recent content in docker on ZA TAN</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 10 Jul 2018 20:13:22 +0000</lastBuildDate><atom:link href="https://www.ganymedenil.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>PHP 7.1 升级至 7.4</title><link>https://www.ganymedenil.com/2021/04/28/php71-to-php74.html</link><pubDate>Wed, 28 Apr 2021 22:18:34 +0000</pubDate><guid>https://www.ganymedenil.com/2021/04/28/php71-to-php74.html</guid><description>&lt;p>公司项目从 7.1 升级到 7.4 故对 php 升级文档进行整理与翻译。&lt;/p></description></item><item><title>使用 PHP 7 实现 GoF 设计模式之行为型</title><link>https://www.ganymedenil.com/2021/01/09/php7-gof-behavioral-patterns.html</link><pubDate>Sat, 09 Jan 2021 23:20:53 +0000</pubDate><guid>https://www.ganymedenil.com/2021/01/09/php7-gof-behavioral-patterns.html</guid><description>&lt;p>行为型解决的是不同对象之间的通信挑战。它们描述了不同的对象和类之间如何相互发送消息以使事情发生。&lt;/p></description></item><item><title>使用 PHP 7 实现 GoF 设计模式之结构型</title><link>https://www.ganymedenil.com/2021/01/09/php7-gof-structural-patterns.html</link><pubDate>Sat, 09 Jan 2021 23:10:53 +0000</pubDate><guid>https://www.ganymedenil.com/2021/01/09/php7-gof-structural-patterns.html</guid><description>&lt;p>结构型处理的是类和对象的组成。利用接口或抽象类和方法，它们定义了组成对象的方法，进而获得新的功能。&lt;/p></description></item><item><title>使用 PHP 7 实现 GoF 设计模式之创建型</title><link>https://www.ganymedenil.com/2021/01/09/php7-gof-creational-patterns.html</link><pubDate>Sat, 09 Jan 2021 23:04:53 +0000</pubDate><guid>https://www.ganymedenil.com/2021/01/09/php7-gof-creational-patterns.html</guid><description>&lt;p>有很多事情可以使一个优秀的软件开发人员成为可能。设计模式的知识和使用就是其中之一。设计模式使开发人员能够使用各种软件交互的知名名称进行交流。无论某人是PHP、Python、C#、Ruby或任何其他语言的开发者，设计模式都能为经常出现的软件问题提供语言不可知的解决方案。&lt;/p></description></item><item><title>PHP 7:真实世界的应用开发（中文翻译）</title><link>https://www.ganymedenil.com/2020/10/04/php-7-real-world-application-development.html</link><pubDate>Sun, 04 Oct 2020 15:53:09 +0000</pubDate><guid>https://www.ganymedenil.com/2020/10/04/php-7-real-world-application-development.html</guid><description>&lt;p>PHP 7 在开源社区掀起了一场风暴，它打破了之前版本的速度记录，也重新引起了人们对它的关注。从最根本的意义上讲，核心工程团队已经对它进行了重大重写，但仍能保持高度的向后兼容性。PHP是一门开发Web应用的好语言。它本质上是一类服务器端脚本语言，也用于通用编程。PHP 7是最新的版本，提供了主要的向后兼容性突破，并专注于提高性能和速度。这意味着你可以通过多线程网络服务器，用低成本的硬件和服务器维持网站的高流量。&lt;/p></description></item><item><title>go基础库之连接到 HTTP 服务器</title><link>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-connect-to-http-server.html</link><pubDate>Sun, 10 May 2020 21:20:08 +0000</pubDate><guid>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-connect-to-http-server.html</guid><description>&lt;p>前面分享了 “连接到远程服务器” 让我们了解了如何连接 TCP 服务器。本文，将展示更高级别的 HTTP 服务器的通信。&lt;/p></description></item><item><title>go基础库之通过 IP 地址解析域名</title><link>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-domain-name-resolution-by-ip-address.html</link><pubDate>Sun, 10 May 2020 21:17:08 +0000</pubDate><guid>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-domain-name-resolution-by-ip-address.html</guid><description>&lt;p>golang 基础库之通过 IP 地址解析域名，本文将向你介绍如何将 IP 地址转换为主机地址，反之亦然。&lt;/p></description></item><item><title>go基础库之连接到远程服务器</title><link>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-connect-to-a-remote-server.html</link><pubDate>Sun, 10 May 2020 21:15:16 +0000</pubDate><guid>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-connect-to-a-remote-server.html</guid><description>&lt;p>基于TCP的协议是网络通信中最重要的协议。 提醒一下，HTTP，FTP，SMTP和其他协议也是它的一部分。 本文可让你深入了解如何连接到TCP服务器。&lt;/p></description></item><item><title>go基础库之解析本地 IP 地址</title><link>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-resolve-local-ip-address.html</link><pubDate>Sun, 10 May 2020 21:12:11 +0000</pubDate><guid>https://www.ganymedenil.com/2020/05/10/go-standard-library-by-resolve-local-ip-address.html</guid><description>&lt;p>golang 基础库之解析本地 IP 地址，介绍了如何从可用的本地端口获取对应的IP地址&lt;/p></description></item><item><title>领域驱动设计的开始</title><link>https://www.ganymedenil.com/2019/09/05/domain-driven-design-begins.html</link><pubDate>Thu, 05 Sep 2019 20:54:59 +0000</pubDate><guid>https://www.ganymedenil.com/2019/09/05/domain-driven-design-begins.html</guid><description>&lt;p>软件不仅仅是代码。 如果你仔细想想，代码很少是我们这个职业的最终目标。 代码只是解决业务问题的媒介。 那么为什么我们要谈一种不同的语言呢？ 领域驱动设计强调确保企业和软件使用同一种语言。 一旦打破这个障碍，就不需要翻译或繁琐的同步，信息也不会丢失。 每个人都有助于发现业务领域，而不仅仅是程序员。 由此产生的软件是共同语言的唯一真理。&lt;/p></description></item><item><title>Go 1.13 的 Errors</title><link>https://www.ganymedenil.com/2019/09/04/A-Look-At-Go-1.13-Errors.html</link><pubDate>Wed, 04 Sep 2019 19:40:58 +0000</pubDate><guid>https://www.ganymedenil.com/2019/09/04/A-Look-At-Go-1.13-Errors.html</guid><description>&lt;p>Go 1.13 为 &lt;code>error&lt;/code> 包带来了新的内容。 它们来自于 &lt;a href="https://go.googlesource.com/proposal/+/master/design/29934-error-values.md">Go 2 错误检查&lt;/a>的建议。&lt;/p></description></item><item><title>go基础库之解析用户主目录</title><link>https://www.ganymedenil.com/2019/06/09/go-standard-library-by-parse-the-user-is-home-directory.html</link><pubDate>Sun, 09 Jun 2019 21:05:50 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/09/go-standard-library-by-parse-the-user-is-home-directory.html</guid><description>&lt;p>程序知道用户的主目录是非常有用的，例如，如果需要存储自定义用户配置或与用户相关的任何其他数据。本文将介绍如何找出当前用户的主目录。&lt;/p></description></item><item><title>go基础库之过滤文件列表</title><link>https://www.ganymedenil.com/2019/06/09/go-standard-library-by-filter-file-list.html</link><pubDate>Sun, 09 Jun 2019 21:04:11 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/09/go-standard-library-by-filter-file-list.html</guid><description>&lt;p>本文将介绍如何列出匹配给定模式的文件路径。该列表不必来自同一文件夹。&lt;/p></description></item><item><title>go基础库之创建文件和目录</title><link>https://www.ganymedenil.com/2019/06/09/go-standard-library-by-create-files-and-directories.html</link><pubDate>Sun, 09 Jun 2019 19:02:40 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/09/go-standard-library-by-create-files-and-directories.html</guid><description>&lt;p>本文描述了一些在代码中创建文件和目录的通常方法。&lt;/p></description></item><item><title>go基础库之比较两个文件</title><link>https://www.ganymedenil.com/2019/06/08/go-standard-library-by-compare-two-files.html</link><pubDate>Sat, 08 Jun 2019 19:00:46 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/08/go-standard-library-by-compare-two-files.html</guid><description>&lt;p>本文将向你展示如何快速确定两个文件是否相同。还将为你提供一种找到两者之间差异的方法。&lt;/p></description></item><item><title>go基础库之更改文件权限</title><link>https://www.ganymedenil.com/2019/06/07/go-standard-library-by-change-file-permissions.html</link><pubDate>Fri, 07 Jun 2019 22:20:26 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/07/go-standard-library-by-change-file-permissions.html</guid><description>&lt;p>本文将介绍如何以编程的方式更改文件权限。&lt;/p></description></item><item><title>go基础库之列出目录</title><link>https://www.ganymedenil.com/2019/06/07/go-standard-library-by-list-directory.html</link><pubDate>Fri, 07 Jun 2019 22:19:06 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/07/go-standard-library-by-list-directory.html</guid><description>&lt;p>本文将展示如何列出目录内容。&lt;/p></description></item><item><title>go基础库之写文件</title><link>https://www.ganymedenil.com/2019/06/06/go-standard-library-by-write-file.html</link><pubDate>Thu, 06 Jun 2019 20:10:59 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/06/go-standard-library-by-write-file.html</guid><description>&lt;p>Go支持多种方式来进行写文件操作。&lt;/p></description></item><item><title>go基础库之多个goroutine写文件</title><link>https://www.ganymedenil.com/2019/06/06/go-standard-library-by-multiple-goroutine-write-files.html</link><pubDate>Thu, 06 Jun 2019 19:56:39 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/06/go-standard-library-by-multiple-goroutine-write-files.html</guid><description>&lt;p>本文将演示如果从多个goroutine安全地写入文件。&lt;/p></description></item><item><title>go基础库之获取文件信息</title><link>https://www.ganymedenil.com/2019/06/05/go-standard-library-by-get-file-information.html</link><pubDate>Wed, 05 Jun 2019 20:13:23 +0000</pubDate><guid>https://www.ganymedenil.com/2019/06/05/go-standard-library-by-get-file-information.html</guid><description>&lt;p>如果需要获取访问文件的基本信息，Go标准库提供了相关的方法。&lt;/p></description></item></channel></rss>